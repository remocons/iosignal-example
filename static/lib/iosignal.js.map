{"version":3,"file":"iosignal.js","sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/meta-buffer-pack/src/meta-buffer-pack.js","../node_modules/eventemitter3/index.js","../node_modules/boho/lib/fast-sha256.js","../node_modules/boho/src/sha256-mbp.js","../node_modules/boho/src/constants.js","../node_modules/boho/src/boho.js","../src/common/constants.js","../src/common/quotaTable.js","../src/common/payload.js","../src/client/IOCore.js","../src/client/IOWebSocket.js"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","import { Buffer } from 'buffer/index.js'\nexport { Buffer } // for iife reference MBP.Buffer\nconst encoder = new TextEncoder()\nconst decoder = new TextDecoder()\n\nexport const NB = numberBuffer\nexport function numberBuffer(type, initValue = 0) {\n  let buffer\n  if (type === undefined || typeof type !== 'string' || typeof initValue !== 'number') {\n    throw TypeError('invlaid init variablie type name. ')\n  }\n  type = type.toUpperCase()\n\n  if (type.includes('8')) {\n    buffer = Buffer.alloc(1)\n    if (type.includes('I')) buffer.writeInt8(initValue)\n    else buffer.writeUint8(initValue)\n  } else if (type.includes('16')) {\n    buffer = Buffer.alloc(2)\n    if (type.includes('I')) {\n      if (type.includes('L')) buffer.writeInt16LE(initValue)\n      else buffer.writeInt16BE(initValue)\n    } else {\n      if (type.includes('L')) buffer.writeUint16LE(initValue)\n      else buffer.writeUint16BE(initValue)\n    }\n  } else if (type.includes('32')) {\n    buffer = Buffer.alloc(4)\n    if (type.includes('I')) {\n      if (type.includes('L')) buffer.writeInt32LE(initValue)\n      else buffer.writeInt32BE(initValue)\n    } else {\n      if (type.includes('L')) buffer.writeUint32LE(initValue)\n      else buffer.writeUint32BE(initValue)\n    }\n  } else if (type.includes('F')) {\n    buffer = Buffer.alloc(4)\n    if (type.includes('L')) {\n      buffer.writeFloatLE(initValue)\n    } else {\n      buffer.writeFloatBE(initValue)\n    }\n  } else if (type.includes('N')) { // number as string\n    buffer = Buffer.from(String(initValue))\n  } else {\n    console.log(`invalid type: ${type} or initvalue: ${initValue}`)\n  }\n  return buffer\n}\n\n\nexport const MB = metaBuffer\nexport function metaBuffer(name, typeOrData, initValue) {\n  let buffer\n  let bufferType = 'B'\n  if (typeof typeOrData === 'number') {\n    if (typeof initValue === 'number') {  // initValue 0 should be passed.\n      buffer = Buffer.alloc(typeOrData)\n      if (initValue !== 0) buffer.fill(initValue)\n      bufferType = 'B'\n    } else {\n      buffer = Buffer.from(String(typeOrData))\n      bufferType = 'N'\n    }\n  } else if (typeof typeOrData === 'string' && typeof initValue === 'number') { // number with type.\n    bufferType = typeOrData.toUpperCase() // use explicit type name\n    buffer = numberBuffer(typeOrData, initValue) // notice.  two categories.  n: number string.  8, 16, 32: typed number.\n  } else if (typeof typeOrData === 'string' && initValue === undefined) { //  string buffer\n    buffer = Buffer.from(typeOrData)\n    bufferType = 'S'\n  } else if (typeOrData instanceof Uint8Array && initValue === undefined) { // buffer | Uint8Array\n    // Buffer.from:  Copies the passed buffer data onto a new Buffer instance.\n    // typecasting Uint8Array to Buffer.\n    buffer = (typeOrData instanceof Buffer) ? typeOrData : Buffer.from(typeOrData)\n  } else if (typeOrData instanceof ArrayBuffer && initValue === undefined) { // arrayBuffer\n    // Notice. typedArray is recommended instead of arrayBuffer\n    buffer = Buffer.from(typeOrData)\n  } else if (ArrayBuffer.isView(typeOrData)) { // typedarray buffer\n    buffer = Buffer.from(typeOrData.buffer, typeOrData.byteOffset, typeOrData.byteLength)\n  } else if (typeof typeOrData === 'object' && initValue === undefined) { //   object. like array. stringify\n    buffer = Buffer.from(JSON.stringify(typeOrData))\n    bufferType = 'O'\n  } else if (typeof typeOrData === 'boolean' && initValue === undefined) { //   object. like array. stringify\n    const v = typeOrData ? 1 : 0\n    buffer = Buffer.from([v])\n    bufferType = '!'\n  } else {\n    throw TypeError('invalid meta buffer type')\n  }\n\n  if (typeof name === 'string' && name.includes('#')) name = '' //\n\n  return [name, bufferType, buffer]\n}\n\nexport const MBA = metaBufferArguments\nexport function metaBufferArguments(...args) {\n  let i = 0\n  const mba = args.map(\n    data => {\n      const argsIndex = i++\n      // tip. MBA use index number as metabuffer's property name.\n      if (typeof data === 'number') {\n        // * JS's primitive Number stored as string.\n        return MB(argsIndex, 'N', data)\n      } else {\n        // typedarray, dataview, array, object, boolean\n        return MB(argsIndex, data)\n      }\n    })\n\n  return mba\n}\n\nexport function parseTypeName(type) {\n  type = type.toUpperCase()\n\n  if (type.includes('8')) {\n    if (type.includes('I')) {\n      return 'int8'\n    } else {\n      return 'uint8'\n    }\n  } else if (type.includes('16')) {\n    if (type.includes('I')) {\n      if (type.includes('L')) {\n        return 'int16_le'\n      } else {\n        return 'int16_be'\n      }\n    } else {\n      if (type.includes('L')) {\n        return 'uint16_le'\n      } else {\n        return 'uint16_be'\n      }\n    }\n  } else if (type.includes('32')) {\n    if (type.includes('I')) {\n      if (type.includes('L')) {\n        return 'int32_le'\n      } else {\n        return 'int32_be'\n      }\n    } else {\n      if (type.includes('L')) {\n        return 'uint32_le'\n      } else {\n        return 'uint32_be'\n      }\n    }\n  } else if (type.includes('F')) {\n    if (type.includes('L')) {\n      return 'float_le'\n    } else {\n      return 'float_be'\n    }\n  } else if (type === 'B') {\n    return 'buffer'\n  } else if (type === 'S') { // string or arguments\n    return 'string'\n  } else if (type === 'N') { // number encoded as string\n    return 'number'\n  } else if (type === 'O') { // object encoded string\n    return 'object'\n  } else if (type === '!') { // boolean  1:true 0:false\n    return 'boolean'\n  } else {\n    throw TypeError('invalid data type')\n  }\n\n}\n\nexport function readTypedBuffer(simpleType, buffer, offset, length) {\n  try {\n    const type = parseTypeName(simpleType)\n    if (type == 'int8') return buffer.readInt8(offset)\n    else if (type === 'uint8') return buffer.readUint8(offset)\n    else if (type === 'int16_le') return buffer.readInt16LE(offset)\n    else if (type === 'int16_be') return buffer.readInt16BE(offset)\n    else if (type === 'uint16_le') return buffer.readUint16LE(offset)\n    else if (type === 'uint16_be') return buffer.readUint16BE(offset)\n    else if (type === 'int32_le') return buffer.readInt32LE(offset)\n    else if (type === 'int32_be') return buffer.readInt32BE(offset)\n    else if (type === 'uint32_le') return buffer.readUint32LE(offset)\n    else if (type === 'uint32_be') return buffer.readUint32BE(offset)\n    else if (type === 'float_le') return buffer.readFloatLE(offset)\n    else if (type === 'float_be') return buffer.readFloatBE(offset)\n\n    else if (type === 'buffer') {\n      return buffer.subarray(offset, offset + length)\n    } else if (type === 'string') {\n      const strBuffer = buffer.subarray(offset, offset + length)\n      return decoder.decode(strBuffer)\n    } else if (type === 'number') {\n      const strNumber = buffer.subarray(offset, offset + length)\n      return Number(decoder.decode(strNumber))\n    } else if (type === 'object') {\n      const objEncoded = buffer.subarray(offset, offset + length)\n      return JSON.parse(decoder.decode(objEncoded))\n    } else if (type === 'boolean') {\n      const v = buffer.readInt8(offset)\n      return v === 1\n    } else {\n      return\n    }\n  } catch (error) {\n    // console.log('MBP:readTypedBuffer obj decoding error.', error)\n  }\n  // any error and invalid data return undefined \n  return\n}\n\n// to join MBA or MB meta list.\nfunction flatArray(args) {\n  let subArr = []\n  const mainArr = args.filter(item => {\n    if (Array.isArray(item[0])) subArr = subArr.concat(item)\n    else return item\n  })\n  return mainArr.concat(subArr)\n}\n\nexport function pack(...args) {\n  const bufArr = flatArray(args)\n  // console.log('MBP.pack: flat MB or MBA list', bufArr)\n  let size = 0\n  const info = []\n  let offset = 0\n\n  bufArr.forEach(bufPack => {\n    const [name, type, data] = bufPack\n    size += data.byteLength\n\n    if (typeof name === 'number' || name.length > 0) {\n      // if the item has property name then add meta JSON info.\n      // type of name is Number in MBA.(index number)\n      // type of name is String in MB. except null string.\n      // add additional informative meta info.  \n      info.push([name, type, offset, data.byteLength])\n    }\n    offset = size\n  })\n\n\n  // console.log('MBP.pack meta:', info )\n  let infoEncoded\n  let infoSize\n\n  if (info.length > 0) {\n    let infoStr = JSON.stringify(info)\n    // console.log('pack infoStr , size:', infoStr , infoStr.length )\n    infoEncoded = encoder.encode(infoStr)\n    infoSize = infoEncoded.byteLength\n    size = size + infoSize + 2\n  }\n\n  const buffer = Buffer.alloc(size)\n  offset = 0\n  bufArr.forEach(bufPack => {\n    const buf = bufPack[2]\n    buffer.set(buf, offset)\n    offset += buf.byteLength\n  })\n\n  if (info.length > 0) {\n    buffer.set(infoEncoded, offset)\n    const infoSizeBuff = NB('16', infoSize)\n    buffer.set(infoSizeBuff, offset + infoSize)\n    return buffer\n  } else {\n    return buffer\n  }\n}\n\n\n/**\n * unpack() will use embeded meta info from the binary pack.  \n * You can specify (optional) meta obejct. \n * (It's useful to read pure buffer data.)\n * \n * You can get the meta object from:  getFrame(pack) , meta()\n * @param {Buffer|Uint8Array} binPack binaryData\n * @param {Object} meta *OPTION*  \n * @returns {Object|undefined} success: return Object (include buffer data).   fail: return undefined\n */\nexport function unpack(binPack, meta) {\n\n  const infoArr = meta || getMeta(binPack)\n  if (!infoArr) return\n\n  const buffer = Buffer.from(binPack)\n  const binObj = {}\n  let readCounter = 0\n  infoArr.forEach(bufPack => {\n    const [name, type, offset, length] = bufPack\n    let result = readTypedBuffer(type, buffer, offset, length)\n    if (result == undefined) return\n    binObj[name] = result\n    if (length) readCounter += length\n  })\n\n  // Can not define meta for variable size buffer \n  // unpacker support automatic property to read left(did't read) buffers.\n  // console.log(\"######, unpack: buffer \" , readCounter, buffer ,buffer.byteLength)\n  if (meta && buffer.byteLength !== readCounter) {\n    let leftSize = buffer.byteLength - readCounter\n    // console.log('total,left buffer size', buffer.byteLength, leftSize )\n    let result = readTypedBuffer('b', buffer, readCounter, leftSize)\n    if (result == undefined) return\n    binObj[\"$OTHERS\"] = result\n  }\n\n  // set args with values if exist.\n  let mbaIndex = 0;\n  let args = [];\n  while (binObj[mbaIndex]) {\n    args.push(binObj[mbaIndex++])\n  }\n\n  if (args.length > 0) {\n    binObj.args = args\n    binObj.$ = binObj.args\n  }\n  return binObj\n}\n\n\nexport const U8 = parseUint8Array   //alias\n/**\n * \n * @param {any} data \n * @param {Boolean} shareArrayBuffer false(default):  return new( or copied) ArrayBuffer.    true: share the input data's arrayBuffer.\n * @returns {Uint8Array}\n */\nexport function parseUint8Array(data, shareArrayBuffer = false) {\n  if (data === undefined) throw TypeError('Invalid data type: Undefined')\n  if (typeof data === 'string') {\n    return encoder.encode(data)\n  } else if (typeof data === 'number') { // number -> 1 byte uint8array(number)\n    return Uint8Array.from([data])\n  } else if (data instanceof ArrayBuffer) { // arraybuffer -> wrap uint8array(ab)\n    if (shareArrayBuffer) {\n      return new Uint8Array(data)\n    } else {\n      const originData = new Uint8Array(data)\n      const dataCopy = new Uint8Array(data.byteLength)\n      dataCopy.set(originData)\n      return dataCopy\n    }\n  } else if (ArrayBuffer.isView(data)) { // accept Buffer too.\n    if (shareArrayBuffer) {\n      return new Uint8Array(data.buffer, data.byteOffset, data.byteLength) // DataView, TypedArray >  uint8array( use offset, length )\n    } else {\n      // new memory to protect origin arraybuffer.\n      const originData = new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n      const dataCopy = new Uint8Array(data.byteLength)\n      dataCopy.set(originData)\n      return dataCopy\n    }\n  } else { // array, object\n    return encoder.encode(JSON.stringify(data)) // object(array.. )  > JSON.str > encode > unint8array\n  }\n}\n\nexport const B8 = parseBuffer\nexport function parseBuffer(data, shareArrayBuffer = false) {\n\n  const u8 = parseUint8Array(data, shareArrayBuffer)\n  if (shareArrayBuffer) {\n    return Buffer.from(u8.buffer, u8.byteOffset, u8.byteLength)\n  } else {\n    return Buffer.from(u8)\n  }\n}\n\nexport const B8pack = parseBufferThenConcat\nexport function parseBufferThenConcat(...dataArray) {\n  const buffers = dataArray.map(data => parseBuffer(data))\n  return Buffer.concat(buffers)\n}\n\n\nexport const U8pack = parseUint8ThenConcat // alias\n/**\n * 1. parse list of data into U8 list\n * 2. return new Uint8Array merged.\n * @param  {...any} dataArray \n * @returns \n */\nexport function parseUint8ThenConcat(...dataArray) {\n  try {\n    let bufferSize = 0\n    let offset = 0\n    const buffers = dataArray.map(data => parseUint8Array(data))\n    buffers.forEach(buf => { bufferSize += buf.byteLength })\n    const buffer = new Uint8Array(bufferSize)\n    buffers.forEach(buf => {\n      buffer.set(buf, offset)\n      offset += buf.byteLength\n    })\n    return buffer\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport function hex(buffer) {\n  return Array.prototype.map.call(new Uint8Array(buffer), x => ('00' + x.toString(16)).slice(-2)).join('')\n}\n\nexport function equal(buf1, buf2) {\n  if (buf1.byteLength !== buf2.byteLength) return false\n  for (let i = 0; i < buf1.byteLength; i++) {\n    if (buf1[i] !== buf2[i]) return false\n  }\n  return true\n}\n\n\nexport function getBufferSize(binPack) {\n  if (getMetaSize(binPack) === 0) {\n    return binPack.byteLength\n  } else {\n    return binPack.byteLength - getMetaSize(binPack) - TAIL_LEN\n  }\n}\n\n// MB and MBA \nexport function parseMetaInfo(binPack, infoSize) {\n  let info;\n  try {\n    const buffer = new Uint8Array(binPack.buffer, binPack.byteOffset, binPack.byteLength)\n    const infoFrom = buffer.byteLength - infoSize - 2\n    const infoEncoded = buffer.subarray(infoFrom, buffer.byteLength - 2)\n    const decoded = decoder.decode(infoEncoded)\n    const info = JSON.parse(decoded)\n\n    if (!Array.isArray(info) || !Array.isArray(info[0])) return\n\n    let firstItem = info[0]\n    if (!firstItem) return\n\n    if (firstItem.length < 3) return\n    const [name, type, offset] = firstItem\n\n    if (typeof type !== 'string' || typeof offset !== 'number') return\n\n    return info\n  } catch (error) {\n    // return undefined\n  }\n}\n\n\n/** \n * Meta buffer pack Tail:\n * binary Pack include TAIL(two bytes size) info at the end if it has JSON info.\n * not include TAIL if it has not JSON.\n */\nexport const TAIL_LEN = 2\n\n/**\n * \n * @param {Buffer|Uint8Array|ArrayBuffer} binPack \n * @returns {Number} last two byte value( read Uint16 bigendian )\n */\nexport function readTail(binPack) {\n  if (binPack instanceof ArrayBuffer) {\n    binPack = Buffer.from(binPack) // creates a view for ArrayBuffer, without copying.\n  }\n  if (binPack instanceof Uint8Array) {\n    if (binPack.byteLength <= TAIL_LEN) return 0\n\n    const dv = new DataView(binPack.buffer, binPack.byteOffset, binPack.byteLength)\n    const infoSize = dv.getUint16(binPack.byteLength - TAIL_LEN)  // last 2 bytes for json-info-length.\n    return infoSize\n\n  } else {\n    // throw TypeError('invalid data type.')\n    return 0\n  }\n\n}\n\n\n// binay data pack is not always Buffer.  \n// It should accept Uint8Array binPack.\n// This function don't use Buffer method.\n\nexport function getMetaSize(binPack) {\n  if (binPack instanceof ArrayBuffer) {\n    binPack = Buffer.from(binPack) // creates a view for ArrayBuffer, without copying.\n  }\n  if (binPack instanceof Uint8Array) {\n\n    const size = binPack.byteLength\n    if (size <= TAIL_LEN) return 0\n\n    //1. tail size check\n    const infoSize = readTail(binPack)\n    if (infoSize === 0 || infoSize > size) return 0\n    //2. try parse JSON \n    const success = parseMetaInfo(binPack, infoSize)\n    //3. return success: jsonInfoSize,  fail: 0\n    if (success) return infoSize\n    else return 0\n  } else {\n    return 0\n  }\n}\n\n\n/**\n * \n * @param {Buffer|Uint8Array} binPack \n * @returns {Buffer} \n */\nexport function getBuffer(binPack) {\n  const rawBufferSize = getBufferSize(binPack)\n  return binPack.subarray(0, rawBufferSize)\n}\n\n\n\n/**\n * extract Meta info object if it has.\n * \n * @param {Buffer|Uint8Array|ArrayBuffer} binPack \n * @param {Boolean} showDetail add additional item info: full data type name and bytelength.\n * @returns {Object|undefined} success: return MetaInfo Object.   fail: return undefined.(No valid JSON included.)\n */\nexport function getMeta(binPack, showDetail = false) {\n  if (binPack instanceof ArrayBuffer) {\n    binPack = Buffer.from(binPack) // creates a view for ArrayBuffer, without copying.\n  }\n  const infoSize = readTail(binPack)\n  if (infoSize === 0) return\n\n  // check valid Meta\n  let metaInfo = parseMetaInfo(binPack, infoSize)\n  if (!metaInfo) return\n\n  if (!showDetail) {\n    return metaInfo\n  } else {\n    // add additional info\n    metaInfo.forEach(bufPack => {\n      const len = bufPack[3]\n      if (len == undefined) {  // add size info.\n        if (bufPack[1].includes('8')) bufPack[3] = 1\n        else if (bufPack[1].includes('16')) bufPack[3] = 2\n        else if (bufPack[1].includes('32')) bufPack[3] = 4\n        else if (bufPack[1].includes('F')) bufPack[3] = 4\n        else if (bufPack[1].includes('!')) bufPack[3] = 1\n      }\n      bufPack[4] = parseTypeName(bufPack[1])  // add full-type-name.\n    })\n    return metaInfo\n  }\n}\n\nexport function rawPack(...args) {\n  return getBuffer(pack(...args))\n}\n\nexport function meta(...args) {\n  return getMeta(pack(...args))\n}\n\nexport function metaDetail(...args) {\n  return getMeta(pack(...args), true)\n}\n\nexport function getMetaDetail(binPack) {\n  return getMeta(binPack, true)\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","// SHA-256 (+ HMAC and PBKDF2) for JavaScript.\n//\n// Written in 2014-2016 by Dmitry Chestnykh.\n// Public domain, no warranty.\n//\n// Functions (accept and return Uint8Arrays):\n//\n//   sha256(message) -> hash\n//   sha256.hmac(key, message) -> mac\n//   sha256.pbkdf2(password, salt, rounds, dkLen) -> dk\n//\n//  Classes:\n//\n//   new sha256.Hash()\n//   new sha256.HMAC(key)\n//\nexport var digestLength = 32\nexport var blockSize = 64\n// SHA-256 constants\nconst K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n  0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n  0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n  0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n  0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n  0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n  0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n  0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n  0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n  0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n])\nfunction hashBlocks (w, v, p, pos, len) {\n  let a, b, c, d, e, f, g, h, u, i, j, t1, t2\n  while (len >= 64) {\n    a = v[0]\n    b = v[1]\n    c = v[2]\n    d = v[3]\n    e = v[4]\n    f = v[5]\n    g = v[6]\n    h = v[7]\n    for (i = 0; i < 16; i++) {\n      j = pos + i * 4\n      w[i] = (((p[j] & 0xff) << 24) | ((p[j + 1] & 0xff) << 16) |\n                ((p[j + 2] & 0xff) << 8) | (p[j + 3] & 0xff))\n    }\n    for (i = 16; i < 64; i++) {\n      u = w[i - 2]\n      t1 = (u >>> 17 | u << (32 - 17)) ^ (u >>> 19 | u << (32 - 19)) ^ (u >>> 10)\n      u = w[i - 15]\n      t2 = (u >>> 7 | u << (32 - 7)) ^ (u >>> 18 | u << (32 - 18)) ^ (u >>> 3)\n      w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0)\n    }\n    for (i = 0; i < 64; i++) {\n      t1 = (((((e >>> 6 | e << (32 - 6)) ^ (e >>> 11 | e << (32 - 11)) ^\n                (e >>> 25 | e << (32 - 25))) + ((e & f) ^ (~e & g))) | 0) +\n                ((h + ((K[i] + w[i]) | 0)) | 0)) | 0\n      t2 = (((a >>> 2 | a << (32 - 2)) ^ (a >>> 13 | a << (32 - 13)) ^\n                (a >>> 22 | a << (32 - 22))) + ((a & b) ^ (a & c) ^ (b & c))) | 0\n      h = g\n      g = f\n      f = e\n      e = (d + t1) | 0\n      d = c\n      c = b\n      b = a\n      a = (t1 + t2) | 0\n    }\n    v[0] += a\n    v[1] += b\n    v[2] += c\n    v[3] += d\n    v[4] += e\n    v[5] += f\n    v[6] += g\n    v[7] += h\n    pos += 64\n    len -= 64\n  }\n  return pos\n}\n// Hash implements SHA256 hash algorithm.\nconst Hash = /** @class */ (function () {\n  function Hash () {\n    this.digestLength = digestLength\n    this.blockSize = blockSize\n    // Note: Int32Array is used instead of Uint32Array for performance reasons.\n    this.state = new Int32Array(8) // hash state\n    this.temp = new Int32Array(64) // temporary state\n    this.buffer = new Uint8Array(128) // buffer for data to hash\n    this.bufferLength = 0 // number of bytes in buffer\n    this.bytesHashed = 0 // number of total bytes hashed\n    this.finished = false // indicates whether the hash was finalized\n    this.reset()\n  }\n  // Resets hash state making it possible\n  // to re-use this instance to hash other data.\n  Hash.prototype.reset = function () {\n    this.state[0] = 0x6a09e667\n    this.state[1] = 0xbb67ae85\n    this.state[2] = 0x3c6ef372\n    this.state[3] = 0xa54ff53a\n    this.state[4] = 0x510e527f\n    this.state[5] = 0x9b05688c\n    this.state[6] = 0x1f83d9ab\n    this.state[7] = 0x5be0cd19\n    this.bufferLength = 0\n    this.bytesHashed = 0\n    this.finished = false\n    return this\n  }\n  // Cleans internal buffers and re-initializes hash state.\n  Hash.prototype.clean = function () {\n    for (var i = 0; i < this.buffer.length; i++) {\n      this.buffer[i] = 0\n    }\n    for (var i = 0; i < this.temp.length; i++) {\n      this.temp[i] = 0\n    }\n    this.reset()\n  }\n  // Updates hash state with the given data.\n  //\n  // Optionally, length of the data can be specified to hash\n  // fewer bytes than data.length.\n  //\n  // Throws error when trying to update already finalized hash:\n  // instance must be reset to use it again.\n  Hash.prototype.update = function (data, dataLength) {\n    if (dataLength === void 0) { dataLength = data.length }\n    if (this.finished) {\n      throw new Error(\"SHA256: can't update because hash was finished.\")\n    }\n    let dataPos = 0\n    this.bytesHashed += dataLength\n    if (this.bufferLength > 0) {\n      while (this.bufferLength < 64 && dataLength > 0) {\n        this.buffer[this.bufferLength++] = data[dataPos++]\n        dataLength--\n      }\n      if (this.bufferLength === 64) {\n        hashBlocks(this.temp, this.state, this.buffer, 0, 64)\n        this.bufferLength = 0\n      }\n    }\n    if (dataLength >= 64) {\n      dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength)\n      dataLength %= 64\n    }\n    while (dataLength > 0) {\n      this.buffer[this.bufferLength++] = data[dataPos++]\n      dataLength--\n    }\n    return this\n  }\n  // Finalizes hash state and puts hash into out.\n  //\n  // If hash was already finalized, puts the same value.\n  Hash.prototype.finish = function (out) {\n    if (!this.finished) {\n      const bytesHashed = this.bytesHashed\n      const left = this.bufferLength\n      const bitLenHi = (bytesHashed / 0x20000000) | 0\n      const bitLenLo = bytesHashed << 3\n      const padLength = (bytesHashed % 64 < 56) ? 64 : 128\n      this.buffer[left] = 0x80\n      for (var i = left + 1; i < padLength - 8; i++) {\n        this.buffer[i] = 0\n      }\n      this.buffer[padLength - 8] = (bitLenHi >>> 24) & 0xff\n      this.buffer[padLength - 7] = (bitLenHi >>> 16) & 0xff\n      this.buffer[padLength - 6] = (bitLenHi >>> 8) & 0xff\n      this.buffer[padLength - 5] = (bitLenHi >>> 0) & 0xff\n      this.buffer[padLength - 4] = (bitLenLo >>> 24) & 0xff\n      this.buffer[padLength - 3] = (bitLenLo >>> 16) & 0xff\n      this.buffer[padLength - 2] = (bitLenLo >>> 8) & 0xff\n      this.buffer[padLength - 1] = (bitLenLo >>> 0) & 0xff\n      hashBlocks(this.temp, this.state, this.buffer, 0, padLength)\n      this.finished = true\n    }\n    for (var i = 0; i < 8; i++) {\n      out[i * 4 + 0] = (this.state[i] >>> 24) & 0xff\n      out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff\n      out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff\n      out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff\n    }\n    return this\n  }\n  // Returns the final hash digest.\n  Hash.prototype.digest = function () {\n    const out = new Uint8Array(this.digestLength)\n    this.finish(out)\n    return out\n  }\n  // Internal function for use in HMAC for optimization.\n  Hash.prototype._saveState = function (out) {\n    for (let i = 0; i < this.state.length; i++) {\n      out[i] = this.state[i]\n    }\n  }\n  // Internal function for use in HMAC for optimization.\n  Hash.prototype._restoreState = function (from, bytesHashed) {\n    for (let i = 0; i < this.state.length; i++) {\n      this.state[i] = from[i]\n    }\n    this.bytesHashed = bytesHashed\n    this.finished = false\n    this.bufferLength = 0\n  }\n  return Hash\n}())\nexport { Hash }\n// HMAC implements HMAC-SHA256 message authentication algorithm.\nconst HMAC = /** @class */ (function () {\n  function HMAC (key) {\n    this.inner = new Hash()\n    this.outer = new Hash()\n    this.blockSize = this.inner.blockSize\n    this.digestLength = this.inner.digestLength\n    const pad = new Uint8Array(this.blockSize)\n    if (key.length > this.blockSize) {\n      (new Hash()).update(key).finish(pad).clean()\n    } else {\n      for (var i = 0; i < key.length; i++) {\n        pad[i] = key[i]\n      }\n    }\n    for (var i = 0; i < pad.length; i++) {\n      pad[i] ^= 0x36\n    }\n    this.inner.update(pad)\n    for (var i = 0; i < pad.length; i++) {\n      pad[i] ^= 0x36 ^ 0x5c\n    }\n    this.outer.update(pad)\n    this.istate = new Uint32Array(8)\n    this.ostate = new Uint32Array(8)\n    this.inner._saveState(this.istate)\n    this.outer._saveState(this.ostate)\n    for (var i = 0; i < pad.length; i++) {\n      pad[i] = 0\n    }\n  }\n  // Returns HMAC state to the state initialized with key\n  // to make it possible to run HMAC over the other data with the same\n  // key without creating a new instance.\n  HMAC.prototype.reset = function () {\n    this.inner._restoreState(this.istate, this.inner.blockSize)\n    this.outer._restoreState(this.ostate, this.outer.blockSize)\n    return this\n  }\n  // Cleans HMAC state.\n  HMAC.prototype.clean = function () {\n    for (let i = 0; i < this.istate.length; i++) {\n      this.ostate[i] = this.istate[i] = 0\n    }\n    this.inner.clean()\n    this.outer.clean()\n  }\n  // Updates state with provided data.\n  HMAC.prototype.update = function (data) {\n    this.inner.update(data)\n    return this\n  }\n  // Finalizes HMAC and puts the result in out.\n  HMAC.prototype.finish = function (out) {\n    if (this.outer.finished) {\n      this.outer.finish(out)\n    } else {\n      this.inner.finish(out)\n      this.outer.update(out, this.digestLength).finish(out)\n    }\n    return this\n  }\n  // Returns message authentication code.\n  HMAC.prototype.digest = function () {\n    const out = new Uint8Array(this.digestLength)\n    this.finish(out)\n    return out\n  }\n  return HMAC\n}())\nexport { HMAC }\n// Returns SHA256 hash of data.\nexport function hash (data) {\n  const h = (new Hash()).update(data)\n  const digest = h.digest()\n  h.clean()\n  return digest\n}\n// Function hash is both available as module.hash and as default export.\n// export default hash\n// Returns HMAC-SHA256 of data under the key.\nexport function hmac (key, data) {\n  const h = (new HMAC(key)).update(data)\n  const digest = h.digest()\n  h.clean()\n  return digest\n}\n// Fills hkdf buffer like this:\n// T(1) = HMAC-Hash(PRK, T(0) | info | 0x01)\nfunction fillBuffer (buffer, hmac, info, counter) {\n  // Counter is a byte value: check if it overflowed.\n  const num = counter[0]\n  if (num === 0) {\n    throw new Error('hkdf: cannot expand more')\n  }\n  // Prepare HMAC instance for new data with old key.\n  hmac.reset()\n  // Hash in previous output if it was generated\n  // (i.e. counter is greater than 1).\n  if (num > 1) {\n    hmac.update(buffer)\n  }\n  // Hash in info if it exists.\n  if (info) {\n    hmac.update(info)\n  }\n  // Hash in the counter.\n  hmac.update(counter)\n  // Output result to buffer and clean HMAC instance.\n  hmac.finish(buffer)\n  // Increment counter inside typed array, this works properly.\n  counter[0]++\n}\nconst hkdfSalt = new Uint8Array(digestLength) // Filled with zeroes.\nexport function hkdf (key, salt, info, length) {\n  if (salt === void 0) { salt = hkdfSalt }\n  if (length === void 0) { length = 32 }\n  const counter = new Uint8Array([1])\n  // HKDF-Extract uses salt as HMAC key, and key as data.\n  const okm = hmac(salt, key)\n  // Initialize HMAC for expanding with extracted key.\n  // Ensure no collisions with `hmac` function.\n  const hmac_ = new HMAC(okm)\n  // Allocate buffer.\n  const buffer = new Uint8Array(hmac_.digestLength)\n  let bufpos = buffer.length\n  const out = new Uint8Array(length)\n  for (let i = 0; i < length; i++) {\n    if (bufpos === buffer.length) {\n      fillBuffer(buffer, hmac_, info, counter)\n      bufpos = 0\n    }\n    out[i] = buffer[bufpos++]\n  }\n  hmac_.clean()\n  buffer.fill(0)\n  counter.fill(0)\n  return out\n}\n// Derives a key from password and salt using PBKDF2-HMAC-SHA256\n// with the given number of iterations.\n//\n// The number of bytes returned is equal to dkLen.\n//\n// (For better security, avoid dkLen greater than hash length - 32 bytes).\nexport function pbkdf2 (password, salt, iterations, dkLen) {\n  const prf = new HMAC(password)\n  const len = prf.digestLength\n  const ctr = new Uint8Array(4)\n  const t = new Uint8Array(len)\n  const u = new Uint8Array(len)\n  const dk = new Uint8Array(dkLen)\n  for (var i = 0; i * len < dkLen; i++) {\n    const c = i + 1\n    ctr[0] = (c >>> 24) & 0xff\n    ctr[1] = (c >>> 16) & 0xff\n    ctr[2] = (c >>> 8) & 0xff\n    ctr[3] = (c >>> 0) & 0xff\n    prf.reset()\n    prf.update(salt)\n    prf.update(ctr)\n    prf.finish(u)\n    for (var j = 0; j < len; j++) {\n      t[j] = u[j]\n    }\n    for (var j = 2; j <= iterations; j++) {\n      prf.reset()\n      prf.update(u).finish(u)\n      for (let k = 0; k < len; k++) {\n        t[k] ^= u[k]\n      }\n    }\n    for (var j = 0; j < len && i * len + j < dkLen; j++) {\n      dk[i * len + j] = t[j]\n    }\n  }\n  for (var i = 0; i < len; i++) {\n    t[i] = u[i] = 0\n  }\n  for (var i = 0; i < 4; i++) {\n    ctr[i] = 0\n  }\n  prf.clean()\n  return dk\n}\n","import { hash, hmac } from '../lib/fast-sha256.js'\nimport { MBP } from 'meta-buffer-pack'\n\n/*\nTip.\n fast-sha256 use data:8Uint8Array\n sha256-mbp use data:any  ( internal type converter )\n\n MBP.U8( any ) return Uint8Array\n MBP.B8( any ) reutn Buffer instance\n\n*/\nconst sha256 = {};\n\nsha256.hash = function (data) {\n  return hash(MBP.U8(data))\n}\n\nsha256.hex = function (data) {\n  return MBP.B8( hash(MBP.U8(data)) ).toString('hex')\n}\n\nsha256.base64= function (data) {\n  return MBP.B8(  hash(MBP.U8(data)) ).toString('base64')\n}\n\nsha256.hmac = function (key, data) {\n  return hmac(MBP.U8(key), MBP.U8(data))\n}\n\nexport { sha256 }\n","import{ MBP, Buffer} from \"meta-buffer-pack\"\nconst MB = MBP.MB\n\n\n// remocon message pack one byte header. \nexport let BohoMsg = {\n  AUTH_REQ : 0xB0,  \n  AUTH_NONCE: 0xB1,\n  AUTH_HMAC: 0xB2,\n  AUTH_ACK: 0xB3,\n  AUTH_FAIL: 0xB4,\n  AUTH_EXT: 0xB5,\n  ENC_PACK : 0xB6,  \n  ENC_E2E : 0xB7,  \n  ENC_488 : 0xB8\n}\n\nfor (let c in BohoMsg) { BohoMsg[BohoMsg[c]] = c }\n\nexport const Meta = {\n\n  AUTH_REQ: MBP.meta(  // 2\n    MB('header','8', 0),\n    MB('reserved','8', 0)\n  ),\n\n  AUTH_NONCE: MBP.meta(  // 13\n    MB('header','8', 0),\n    MB('unixTime','32L', 0),\n    MB('milTime','32L', 0 ),\n    MB('nonce', Buffer.alloc(4))\n  ),\n\n  AUTH_HMAC: MBP.meta( // 45\n    MB('header','8', 0),\n    MB('id8',Buffer.alloc(8)),\n    MB('nonce', Buffer.alloc(4)),\n    MB('hmac32', Buffer.alloc(32))\n  ),\n    \n  AUTH_ACK: MBP.meta( // 33\n    MB('header','8', 0),\n    MB('hmac32', Buffer.alloc(32))\n  ),\n    \n\n  ENC_PACK: MBP.meta(  //25 + payload\n    MB('type','8',0),\n    MB('len','32L',0),  // pure xdata size.  \n    MB('salt12', Buffer.alloc(12)),  // sec,mil,rand\n    MB('hmac',8,0)\n    // MB( 'xdata', encData )\n    ),\n\n\n  ENC_488: MBP.meta(   // 21 + payload\n    MB('type','8', 0 ),\n    MB('len','32L', 0 ),\n    MB('otpSrc8', Buffer.alloc(8) ),\n    MB('hmac8', Buffer.alloc(8) )\n    // MB('xdata', encData ) \n    )\n\n\n  }\n\n\n  function getMetaSize(meta){\n    let lastItem = meta[ meta.length - 1]\n    return lastItem[2] + lastItem[3]\n  }\n\n  export const MetaSize = {\n    AUTH_REQ: getMetaSize( Meta.AUTH_REQ ),\n    AUTH_NONCE: getMetaSize( Meta.AUTH_NONCE ),\n    AUTH_HMAC: getMetaSize( Meta.AUTH_HMAC ),\n    AUTH_ACK: getMetaSize( Meta.AUTH_ACK ),\n    ENC_PACK: getMetaSize( Meta.ENC_PACK ),\n    ENC_488: getMetaSize( Meta.ENC_488 )\n  }\n\n// console.log( 'boho MetaSize', MetaSize )\n// boho MetaSize {\n//   AUTH_REQ: 2,\n//   AUTH_NONCE: 13,\n//   AUTH_HMAC: 45,\n//   AUTH_ACK: 33,\n//   ENC_PACK: 25,\n//   ENC_488: 21\n// }","import { sha256 } from './sha256-mbp.js'\nimport { MBP, Buffer } from 'meta-buffer-pack'\nexport { sha256, MBP, Buffer }\n\nimport { webcrypto } from 'crypto'\nimport { BohoMsg, Meta, MetaSize } from \"./constants.js\"\nexport { BohoMsg, Meta, MetaSize }\n\nlet isNode = false\ntry {\n  isNode = Object.prototype.toString.call(global.process) === '[object process]'\n} catch (e) { }\n\n\nexport function RAND(size) {\n  if( isNode ){\n    return webcrypto.getRandomValues(Buffer.alloc(size))\n  }else{\n    return self.crypto.getRandomValues(Buffer.alloc(size))\n  }\n}\n\n\n\nexport class Boho {\n  // A. Core\n  constructor() {\n\n    this._id8 = Buffer.alloc(8)\n    this._otpSrc44 = Buffer.alloc(44)\n    this._otp36 = Buffer.alloc(36)\n    this._hmac = Buffer.alloc(32)\n\n    this.auth_salt12 = Buffer.alloc(12)\n    this.localNonce = Buffer.alloc(4)\n    this.remoteNonce = Buffer.alloc(4)\n    this.isAuthorized = false\n\n  }\n\n  clearAuth(){\n    this._id8.fill(0)\n    this._otpSrc44.fill(0)\n    this._otp36.fill(0)\n    this._hmac.fill(0)\n    this.auth_salt12.fill(0)\n    this.localNonce.fill(0)\n    this.remoteNonce.fill(0)\n    this.isAuthorized = false\n  }\n\n  // for the self\n  set_hash_id8(data) {\n    let idSum = MBP.B8(sha256.hash(data))\n    idSum.copy(this._id8, 0, 0, 8)\n  }\n\n  set_id8(data) {\n    let encStr = MBP.B8(data)\n    this._id8.fill(0)\n    encStr.copy(this._id8, 0, 0, 8)\n  }\n\n  set_key(data) {\n    let keySum = MBP.B8(sha256.hash(data))\n    keySum.copy(this._otpSrc44, 0, 0, 32)\n  }\n\n  //  id_key == 'id' + '.' + 'key' \n  set_id_key(id_key) {\n    let delimiterPosition = id_key.indexOf('.')\n    if( delimiterPosition == -1 ) return\n    let id = id_key.substring(0, delimiterPosition)\n    let key = id_key.substring(delimiterPosition + 1)\n    this.set_id8(id)\n    this.set_key(key)\n  }\n\n  copy_id8(data) {\n    data.copy(this._id8, 0, 0, 8)\n  }\n\n  copy_key(data) {\n    data.copy(this._otpSrc44, 0, 0, 32)\n  }\n\n\n  sha256_n(srcData, n) {\n    let hashSum = sha256.hash(srcData)\n    for (let i = 0; i < n; i++) hashSum = sha256.hash(hashSum)\n    return hashSum\n  }\n\n\n  // useful general encryption  i.e. enc_pack\n  set_clock_rand() {\n\n    let milTime = Date.now()\n    let secTime = parseInt(milTime / 1000)\n    milTime = milTime % 0xffffffff\n    const salt12 = Buffer.concat([\n     MBP.NB('32L', secTime),\n     MBP.NB('32L', milTime),\n      RAND(4)\n    ])\n\n    salt12.copy(this._otpSrc44, 32)\n  }\n\n  // for secure communication sender. \n  set_clock_nonce(nonce) {\n    let milTime = Date.now()\n    let secTime = parseInt(milTime / 1000)\n    milTime = milTime % 0xffffffff\n    const salt12 = Buffer.concat([\n     MBP.NB('32L', secTime),\n     MBP.NB('32L', milTime),\n      nonce\n    ])\n\n    salt12.copy(this._otpSrc44, 32)\n  }\n\n\n  set_salt12(salt12) {\n    salt12.copy(this._otpSrc44, 32)\n  }\n\n  resetOTP() {\n    let otp32 = MBP.B8(sha256.hash(this._otpSrc44))\n    otp32.copy(this._otp36, 0, 0, 32)\n  }\n\n  getIndexOTP(otpIndex) {\n    this._otp36.writeUInt32LE(otpIndex, 32)\n    return sha256.hash(this._otp36)\n  }\n\n\n  generateHMAC(data) {\n    let hmacSrc = Buffer.concat([this._otpSrc44, data])\n    this._hmac = MBP.B8(sha256.hash(hmacSrc))\n  }\n\n  // return 8 bytes of hash\n  getHMAC8(data) {\n    let hmacSrc = Buffer.concat([this._otpSrc44, data])\n    this._hmac = MBP.B8(sha256.hash(hmacSrc))\n    return this._hmac.subarray(0, 8)\n  }\n\n  xotp(data, otpStartIndex = 0, shareDataBuffer = false) {\n\n    data = MBP.B8(data, shareDataBuffer)\n\n    let len = data.byteLength\n    let otpIndex = otpStartIndex\n    let dataOffset = 0\n    let xorCalcLen = 0\n\n    while (len > 0) {\n      xorCalcLen = len < 32 ? len : 32\n      let iotp = this.getIndexOTP(++otpIndex);\n      for (let i = 0; i < xorCalcLen; i++) {\n        data[dataOffset++] ^= iotp[i]\n      }\n      len -= 32\n    }\n    return data\n  }\n\n  // B. AUTH process\n\n  // step 1\n  // client send AUTH_REQ\n  auth_req() {\n    return MBP.pack(\n      MBP.MB('#type', '8', BohoMsg.AUTH_REQ),\n      MBP.MB('#reserved', '8', 0)\n    )\n  }\n\n  // step 2\n  // server send AUTH_NONCE\n  auth_nonce() {\n    let now = Date.now()\n    let unixTime = Math.floor(now / 1000)\n    let milTime = now % 1000\n    this.localNonce = RAND(4)\n    this.auth_salt12 = Buffer.concat([\n     MBP.NB('32L', unixTime),\n     MBP.NB('32L', milTime),\n      this.localNonce\n    ])\n\n    let infoPack = Buffer.concat([\n     MBP.NB('8', BohoMsg.AUTH_NONCE),\n      this.auth_salt12\n    ])\n    return infoPack\n  }\n\n\n  // step 3\n  // client send AUTH_HMAC\n  // input :  auth_nonce buffer\n  auth_hmac(buffer) {\n    let auth_nonce = MBP.unpack(buffer, Meta.AUTH_NONCE)\n    if (auth_nonce) {\n      // console.log(' auth nonce', auth_nonce )\n\n      // let now = Date.now()\n      // let localUTC= Math.floor( now/ 1000 )\n      // let localMilTime = now % 1000\n\n      // console.log('time server [sec]', auth_nonce.unixTime, auth_nonce.milTime )\n      // console.log('time client [sec]', localUTC , localMilTime )\n      // console.log('time diff client and server[sec]', auth_nonce.unixTime - localUTC )\n\n      // let serverSecMil = auth_nonce.unixTime * 1000 + auth_nonce.milTime\n      // console.log('time diff msec client and server[msec]', serverSecMil - now )\n\n      let salt12 = Buffer.concat([\n       MBP.NB('32L', auth_nonce.unixTime),\n       MBP.NB('32L', auth_nonce.milTime),\n        auth_nonce.nonce\n      ])\n\n      this.set_salt12(salt12)\n\n      this.localNonce = RAND(4)\n      // hmac( key, sec,mil,serverNonce, localNonce)\n      this.generateHMAC(this.localNonce)\n\n      // let hmac8 = this._hmac.subarray(0, 8)\n\n      this.remoteNonce = auth_nonce.nonce\n\n      let auth_hmac_buffer = MBP.pack( // 21 -> 45\n       MBP.MB('#header', '8', BohoMsg.AUTH_HMAC),\n       MBP.MB('#id8', this._id8),\n       MBP.MB('#nonce', this.localNonce),\n       MBP.MB('#hmac32', this._hmac ), //full 32bytes hash\n      )\n\n      return auth_hmac_buffer\n    }\n    return false\n  }\n\n  /*  \n      step 4.  for server\n  \n      step 4-1. check client's auth_hmac\n      step 4-2. reply result\n          send AUTH_ACK  with another HMAC for client.\n          or send AUTH_FAIL when fail.\n   */\n\n  // input: unpack object or buffer of auth_hmac\n  check_auth_hmac(data) {\n    let infoPack\n    if (data instanceof Uint8Array) {\n      infoPack = MBP.unpack(data, Meta.AUTH_HMAC)\n      if (!infoPack) {\n        // console.log('auth_hamc unpack fail.')\n        return\n      }\n    } else {\n      infoPack = data;\n\n    }\n    // console.log('auth_hamc infoObj', infoPack )\n\n    this.set_salt12(this.auth_salt12)\n\n    // hmac( key, sec,mil,serverNonce, clientNonce)\n    this.generateHMAC(infoPack.nonce)\n    // let hmac8 = this._hmac.subarray(0, 8)\n    let hmac32 = this._hmac\n\n    if (MBP.equal(infoPack.hmac32, hmac32)) {\n      //Auth success then store client nonce.\n      this.remoteNonce = infoPack.nonce\n\n      let salt12 = Buffer.concat([\n        this.localNonce,\n        this.remoteNonce,\n        this.localNonce\n      ])\n      this.set_salt12(salt12)\n      this.generateHMAC(infoPack.nonce)\n      let replyHMAC = this._hmac\n\n      let auth_ack = MBP.rawPack( \n       MBP.MB('header', '8', BohoMsg.AUTH_ACK),\n       MBP.MB('hmac32', replyHMAC)\n      )\n      this.isAuthorized = true\n      return auth_ack\n    }\n    return false\n  }\n\n\n\n  // step 5.  cross check\n  // client check server's hmac.  \n  check_auth_ack_hmac(buffer) {\n    // server response has hmac ( key + clientNonce)\n    let auth_ack = MBP.unpack(buffer, Meta.AUTH_ACK)\n    if (auth_ack) {\n      let salt12 = Buffer.concat([\n        this.remoteNonce,\n        this.localNonce,\n        this.remoteNonce,\n      ])\n      this.set_salt12(salt12)\n      this.generateHMAC(this.localNonce)\n      // let hmac8 = this._hmac.subarray(0, 8)\n      let hmac32 = this._hmac\n      //server side hmac using client nonce.\n      if (MBP.equal(hmac32, auth_ack.hmac32)) {\n        this.isAuthorized = true\n        return true\n      }\n    }\n    // server hmac error\n    return\n  }\n\n  // C. Secure Communication\n\n  // Must AUTH first.\n  encrypt_488(data) {  // payload max about 2^32 bytes.\n    if (!this.isAuthorized) return\n\n    data = MBP.B8(data)\n\n    this.set_clock_nonce(this.remoteNonce)\n    this.resetOTP()\n\n    let hmac8 = this.getHMAC8(data)\n    let encData = this.xotp(data)\n\n    let pack = MBP.pack(\n      MBP.MB('#type', '8', BohoMsg.ENC_488),\n      MBP.MB('#len', '32L', data.byteLength),\n      MBP.MB('#otpSrc8', this._otpSrc44.subarray(32, 40)),\n      MBP.MB('#hmac8', hmac8),\n      MBP.MB('#xdata', encData)\n    )\n    // console.log('enc pack result', pack )\n    return pack\n  }\n\n\n  decrypt_488(data) {\n    data = MBP.B8(data)\n\n    let pack = MBP.unpack(data, Meta.ENC_488)\n\n    if (pack) {\n\n      let salt12 = Buffer.concat([\n        pack.otpSrc8,\n        this.localNonce\n      ])\n\n      this.set_salt12(salt12)\n      this.resetOTP()\n\n      let xdata = pack.$OTHERS.subarray(0, pack.len)\n      let decData = this.xotp(xdata)\n\n      let hmac8 = this.getHMAC8(decData)\n\n      if (MBP.equal(hmac8, pack.hmac8)) return decData\n\n      // console.log('hmac dismatch', decData )\n    } else {\n      // console.log('unpack fail')\n    }\n  }\n\n\n  // maxium data size is 2**32 -1 bytes.\n  encryptPack(data) {\n    data = MBP.B8(data)\n\n    this.set_clock_rand()\n    this.resetOTP()\n\n    let hmac8 = this.getHMAC8(data)\n    let encData = this.xotp(data)\n\n    let pack = MBP.pack(\n      MBP.MB('#type', '8', BohoMsg.ENC_PACK),\n      MBP.MB('#len', '32L', data.byteLength),\n      MBP.MB('#salt12', this._otpSrc44.subarray(32)),\n      MBP.MB('#hmac8', hmac8),\n      MBP.MB('#xdata', encData)\n    )\n    return pack\n  }\n\n\n  decryptPack(data) {\n\n    if (data[0] !== BohoMsg.ENC_PACK) {\n      // console.log('Boho: Invalid packType')\n      return\n    }\n\n    // packLength\n    let readPackLen = data.readUint32LE(1);\n    if (readPackLen != data.byteLength - MetaSize.ENC_PACK) {\n      // console.log('Boho: Invalid LEN data_len: data.byteLen' , readPackLen, data.byteLength)\n      return\n    }\n\n    try {\n      let pack = MBP.unpack(data, Meta.ENC_PACK)\n      //  console.log('unpack result', pack )\n      if (!pack) return\n\n      this.set_salt12(pack.salt12)\n      this.resetOTP()\n\n      let xdata = pack.$OTHERS\n      let decData = this.xotp(xdata)\n      let hmac8 = this.getHMAC8(decData)\n\n      if (MBP.equal(pack.hmac, hmac8)) {\n        pack.data = decData\n        return pack\n      }\n      // console.log('Invalid HMAC', pack.hmac, hmac8 )\n\n    } catch (error) {\n      // console.log('Boho: unpack err', error )\n\n    }\n  }\n\n  encrypt_e2e(data, key) {\n    let baseKey = Buffer.alloc(32)\n    baseKey.set(this._otpSrc44.subarray(0, 32))\n    this.set_key(key)\n    let pack = this.encryptPack(data)\n    this._otpSrc44.set(baseKey)\n    return pack;\n  }\n\n  decrypt_e2e(data, key) {\n    let baseKey = Buffer.alloc(32)\n    baseKey.set(this._otpSrc44.subarray(0, 32))\n    this.set_key(key)\n    let decPack = this.decryptPack(data)\n    this._otpSrc44.set(baseKey)\n    return decPack\n  }\n\n}\n","\n// Client STATES: name and number\nexport const STATES = {\n  OPENING: 0,\n  OPEN: 1,\n  CLOSING: 2,\n  CLOSED: 3,\n  SERVER_READY: 4,\n  AUTH_FAIL: 5,\n  AUTH_READY: 6,\n  READY: 7,\n  REDIRECTING: 8\n}\nfor (let c in STATES) { STATES[STATES[c]] = c }\n\n// server side client state\nexport const CLIENT_STATE = {\n  INIT: 0,\n  SENT_SERVER_READY: 1,\n  RECV_AUTH_REQ: 2,\n  SENT_SERVER_NONCE: 3,\n  RECV_AUTH_HMAC: 4,\n  AUTH_FAIL: 5,\n  AUTH_READY: 6,\n  CID_READY: 7\n}\nfor (let c in CLIENT_STATE) { CLIENT_STATE[CLIENT_STATE[c]] = c }\n\nexport let ENC_MODE = {\n  NO: 0,\n  YES: 1,\n  AUTO: 2\n}\n\nfor (let c in ENC_MODE) { ENC_MODE[ENC_MODE[c]] = c }\n\n\nexport const SIZE_LIMIT = {\n  TAG_LEN1: 255,\n  TAG_LEN2: 65535,\n  CONNECTION_CHECKER_PERIOD: 3000,\n  PROMISE_TIMEOUT: 5000,\n  DID: 8,\n  CID: 12\n}\n\nexport let PAYLOAD_TYPE = {\n  EMPTY: 0,\n  TEXT: 1,\n  BINARY: 2,\n  OBJECT: 3, // one stringifiable object. it's string.\n  MJSON: 4, // multiple stringifiable obejct. it's top-level array JSON string.\n  MBA: 5  // \"meta_buffer_arguments\" arbitary types.  it's meta-buffer-pack.\n}\nfor (let c in PAYLOAD_TYPE) { PAYLOAD_TYPE[PAYLOAD_TYPE[c]] = c }\n\n\n// IO message's one-byte headers.\nexport let IOMsg = {\n\n  /* \n  * 0~127dec.  reserved. for text stream.\n  * 0~31: control code\n  * 32~126: ascii charactor\n  * 127: DEL\n  */\n\n  // ADMIN_REQ: 0xA0,\n\n  // DO NOT USE: 0xB0~ 0xBF\n  // Boho module using this numbers.\n  // AUTH_REQ : 0xB0,  \n  // AUTH_NONCE: 0xB1,\n  // AUTH_HMAC: 0xB2,\n  // AUTH_ACK: 0xB3,\n  // AUTH_FAIL: 0xB4,\n  // AUTH_EXT: 0xB5,\n  // ENC_PACK : 0xB6,  \n  // ENC_E2E : 0xB7,  \n  // ENC_488 : 0xB8\n  // reserved ~0xBF\n\n  // C. IO status contorl.\n  SERVER_READY: 0xC0,\n  CID_REQ: 0xC1,\n  CID_RES: 0xC2,\n  QUOTA_LEVEL: 0xC3,\n  SERVER_CLEAR_AUTH: 0xC4,\n  SERVER_REDIRECT: 0xC5,\n\n  // ..\n  LOOP: 0xCB,\n  ECHO: 0xCC,\n  PING: 0xCD,\n  PONG: 0xCE,\n  CLOSE: 0xCF,\n  // ~CF\n\n\n  // D. IO data signaling\n  SIGNAL: 0xD0,\n  SIGNAL_REQ: 0xD1,\n  SIGNAL_E2E: 0xD2,\n  SUBSCRIBE: 0xD3,\n  SUBSCRIBE_REQ: 0xD4,\n  UNSUBSCRIBE: 0xD5,\n  SERVER_SIGNAL: 0xD6,\n\n  // ..\n  IAM: 0xD9,\n  IAM_RES: 0xDA,\n\n  //.. \n  SET: 0xDB,   //\n  RESPONSE_CODE: 0xDC,\n  RESPONSE_MBP: 0xDD,\n\n  REQUEST: 0xDE, //client public\n  RESPONSE: 0xDF,\n  // ~DF\n\n\n  // F. Framing Flow control related framing protocol.(CongPacket)\n  FLOW_MODE: 0xF0,\n  WAIT: 0xF1,\n  RESUME: 0xF2,\n  //..\n  TIME_OUT: 0xFD,\n  OVER_SIZE: 0xFE,\n  OVER_FLOW: 0xFF\n\n}\n\nfor (let c in IOMsg) { IOMsg[IOMsg[c]] = c }\n// console.log( IOMsg );\n\nexport const API_TYPE = {\n  'REQUEST_RESPONSE': 'requet_response',\n  'ONE_WAY': 'one_way'\n}\n\n// api response status code\nexport const STATUS = {\n  OK: 0,\n  //0~127: success\n  //128~255: fail\n  ERROR: 255\n}\n","// table index related with:\n// - AUTH database level\n// - serverOption.defaultQuotaIndex\n\n// quota example\n// index range: 0~255.\nexport let quotaTable = {\n  // CongSocket\n  0: { // default. anonymouse:\n    signalSize: 1500,\n    publishCounter: 10,\n    trafficRate: 10000\n  },\n  1: { // auth_ultralight:  eg. Arduino Uno.\n    signalSize: 255,\n    publishCounter: 10,\n    trafficRate: 100000\n  },\n  2: { // auth_light:  eg. authorized ESP.\n    signalSize: 65535,\n    publishCounter: 10,\n    trafficRate: 1048576\n  },\n\n  // WebSocket (browser and node app)\n  3: { // authorized basic.\n    signalSize: 1048576,\n    publishCounter: 10,\n    trafficRate: 1048576 * 20\n  },\n\n  // WebSocket (browser and node app)\n  10: { //  anonymouse\n    signalSize: 1500,\n    publishCounter: 5,\n    trafficRate: 1048576 * 20\n  },\n\n  11: { // authorized basic.\n    signalSize: 65535,\n    publishCounter: 10,\n    trafficRate: 1048576 * 20\n  },\n\n  12: { // authorized power.\n    signalSize: 1048576,\n    publishCounter: 100,\n    trafficRate: 1048576 * 20\n  },\n\n  // you can add your custom quota levels.\n\n  // Remote service node\n  // High Quota, No root permission.\n  200: {\n    signalSize: 1048576 * 20,\n    publishCounter: 10000,\n    trafficRate: 1048576 * 100\n  },\n  // super admin or root user.\n  // to monitor, metric, sudo command, db access.\n  255: {\n    signalSize: 1048576 * 20,\n    publishCounter: 10000,\n    trafficRate: 1048576 * 100\n  }\n}\n\n","import { MBP } from 'meta-buffer-pack'\nimport { PAYLOAD_TYPE, IOMsg } from \"./constants.js\";\nconst encoder = new TextEncoder()\n\n\nexport function getSignalPack(tag, ...args) {\n  if (typeof tag !== 'string') throw TypeError('tag should be string.')\n  let tagEncoded = encoder.encode(tag)\n  let payload = parsePayload(args)\n\n  let sigPack;\n  if (payload.type == PAYLOAD_TYPE.EMPTY) {\n    sigPack = MBP.pack(\n      MBP.MB('#MsgType', '8', IOMsg.SIGNAL),\n      MBP.MB('#tagLen', '8', tagEncoded.byteLength),\n      MBP.MB('#tag', tagEncoded),\n      MBP.MB('#payloadType', '8', payload.type)\n    )\n  } else if (payload.type == PAYLOAD_TYPE.MBA) {\n    let mbaBuffer = MBP.pack(MBP.MBA(...args))\n    sigPack = MBP.pack(\n      MBP.MB('#MsgType', '8', IOMsg.SIGNAL),\n      MBP.MB('#tagLen', '8', tagEncoded.byteLength),\n      MBP.MB('#tag', tagEncoded),\n      MBP.MB('#payloadType', '8', payload.type),\n      MBP.MB('#mbaBuffer', mbaBuffer)\n    )\n  } else {\n    sigPack = MBP.pack(\n      MBP.MB('#MsgType', '8', IOMsg.SIGNAL),\n      MBP.MB('#tagLen', '8', tagEncoded.byteLength),\n      MBP.MB('#tag', tagEncoded),\n      MBP.MB('#payloadType', '8', payload.type),\n      MBP.MB('#payload', payload.buffer)\n    )\n  }\n  return sigPack\n}\n\n\nexport function parsePayload(args) {\n  let type, pack;\n  if (args.length == 0) {\n    type = PAYLOAD_TYPE.EMPTY\n    pack = null\n  } else if (args.length == 1) {\n    if (typeof args[0] === 'string' || typeof args[0] === 'number') {\n      type = PAYLOAD_TYPE.TEXT\n      pack = encoder.encode(args[0] + \".\") // add null byte area.\n      pack[pack.byteLength - 1] = 0 // set byte-zero : '\\0'  in C/C++\n\n    } else if (ArrayBuffer.isView(args[0]) || args[0] instanceof ArrayBuffer) {\n      type = PAYLOAD_TYPE.BINARY\n      pack = MBP.B8(args[0])\n    } else if (typeof args[0] === 'object') {\n      type = PAYLOAD_TYPE.OBJECT\n      pack = encoder.encode(JSON.stringify(args[0]))\n    } else {\n      throw new Error('unknown payload arguments')\n    }\n  } else { // two or more arguments.\n    let containsBuffer = false\n    args.forEach(item => {\n      if (ArrayBuffer.isView(item) || item instanceof ArrayBuffer) containsBuffer = true;\n    })\n\n    if (containsBuffer) {\n      type = PAYLOAD_TYPE.MBA;\n    } else {\n      type = PAYLOAD_TYPE.MJSON;\n      pack = encoder.encode(JSON.stringify(args))\n    }\n\n  }\n\n  return { type: type, buffer: pack }\n}\n\nexport function getPayloadFromSignalPack(signalPack) {\n  let tagLen = signalPack.readUint8(1)\n  return signalPack.subarray(3 + tagLen)\n}","import { MBP, Buffer } from 'meta-buffer-pack'\nimport EventEmitter from \"eventemitter3\";\nimport { Boho, BohoMsg, MetaSize } from \"boho\";\nimport { IOMsg, PAYLOAD_TYPE, SIZE_LIMIT, ENC_MODE, STATES } from '../common/constants.js'\nimport { quotaTable } from '../common/quotaTable.js'\nimport { getSignalPack } from '../common/payload.js';\n\nconst encoder = new TextEncoder()\nconst decoder = new TextDecoder()\n\nfunction byteToUrl(buffer) {\n  //ipv4(4bytes) , port(2bytes)\n  if (buffer.byteLength != 6) return\n  let address = buffer[0].toString() + \".\" + buffer[1].toString()\n    + \".\" + buffer[2].toString() + \".\" + buffer[3].toString();\n  let port = (buffer[4] << 8) + buffer[5]\n  return address + ':' + port.toString()\n}\n\nexport class IOCore extends EventEmitter {\n  constructor(url) {\n    super();\n    this.cid = \"\"   // get from the server  CID_RES\n    this.ip = \"\"    // get from the server  IAM_RES message.\n    this.socket = null;\n    this.url = url; // init default server url\n    this.state = STATES.CLOSED;  // Number type\n    this.stateName = this.getStateName() // String type\n\n    this.txCounter = 0;\n    this.rxCounter = 0;\n    this.txBytes = 0;\n    this.rxBytes = 0;\n\n    this.lastTxRxTime = Date.now();\n    this.connectionCheckerPeriod = SIZE_LIMIT.CONNECTION_CHECKER_PERIOD;\n    this.connectionCheckerIntervalID = null;\n\n    this.boho = new Boho()\n    this.TLS = false // true if protocol is wss(TLS)\n    this.encMode = ENC_MODE.AUTO;\n    this.useAuth = false;\n\n    this.nick = \"\";\n    this.channels = new Set()\n    this.promiseMap = new Map()\n    this.promiseTimeOut = SIZE_LIMIT.PROMISE_TIMEOUT\n    this.mid = 0  // promise message id \n\n    this.level = 3; // also defaultQuotaLevel\n    this.quota = quotaTable[this.level];\n    this.serverSet = {}\n    this.linkMap = new Map()\n\n    this.on('open', this.onOpen.bind(this))\n    this.on('close', this.onClose.bind(this))\n    this.on('socket_data', this.onData.bind(this))\n  }\n\n\n  redirect(url2) {\n    this.close()\n    this.stateChange('redirecting')\n    this.createConnection(url2)\n  }\n\n  open(url) {\n    if (!url && !this.url) return;\n\n    if (url) {\n      if (!this.url) { // default host url\n        this.url = url\n      } else if (url !== this.url) { // default host url change\n        this.url = url;\n        if (this.socket) {\n          this.close()\n          return\n        }\n      }\n    }\n\n    this.createConnection(this.url)\n\n    if (!this.connectionCheckerIntervalID) {\n      this.connectionCheckerIntervalID = setInterval(this.keepAlive.bind(this), this.connectionCheckerPeriod);\n    }\n  }\n\n  onOpen() {\n    if (this.url.includes(\"wss://\")) {\n      this.TLS = true;\n    } else {\n      this.TLS = false;\n    }\n    this.stateChange('open')\n  }\n\n  onClose() {\n    this.boho.isAuthorized = false;\n    this.cid = \"\"\n    this.stateChange('closed')\n  }\n\n  // manual login\n  login(id, key) {\n    if (!id && !key) {\n      console.log('no id and key.')\n      return\n    }\n    console.log('manual login: ', id)\n\n    if (!key && id.includes('.')) {\n      this.boho.set_id_key(id)\n    } else if (id && key) {\n      this.boho.set_id8(id)\n      this.boho.set_key(key)\n    } else {\n      console.log('no id or key.')\n      return\n    }\n    this.useAuth = true\n    let auth_pack = this.boho.auth_req()\n    this.send(auth_pack)\n  }\n\n  // auto login\n  auth(id, key) {\n    if (!id && !key) {\n      console.log('no id and key.')\n      return\n    }\n\n    if (!key && id.includes('.')) {\n      this.boho.set_id_key(id)\n    } else if (id && key) {\n      this.boho.set_id8(id)\n      this.boho.set_key(key)\n    } else {\n      console.log('no id or key.')\n      return\n    }\n    this.useAuth = true\n  }\n\n  onData(buffer) {\n    let msgType = buffer[0];\n    let decoded;\n\n    if (msgType === BohoMsg.ENC_488) {\n      decoded = this.boho.decrypt_488(buffer)\n      if (decoded) {\n        msgType = decoded[0]\n        buffer = decoded\n      } else {\n        // console.log('DEC_FAIL', buffer.byteLength)\n      }\n    } else if (msgType === BohoMsg.ENC_E2E) {\n\n      try {\n        decoded = this.boho.decrypt_488(buffer)\n        if (decoded) {\n          // console.log( 'ENC_E2E decoded ', decoded )\n          msgType = decoded[0]\n          // decoded has msg_header only. \n          buffer.set(decoded, MetaSize.ENC_488) // set decoded signal_e2e headaer.\n          buffer = buffer.subarray(MetaSize.ENC_488) // reset offset.\n          // console.log('DECODED MsgType:', IOMsg[ msgType ] )\n        } else {\n          // console.log('488 DEC_FAIL', buffer)\n          return\n        }\n\n      } catch (err) {\n        // console.log('E2E DEC_FAIL decryption error', err)\n        return\n      }\n\n    }\n\n    let type = IOMsg[msgType]\n    if (!type) type = BohoMsg[msgType]\n\n    // console.log( \"MsgType: \", type , \" LEN \", buffer.byteLength)\n\n    switch (msgType) {\n      case IOMsg.OVER_SIZE:\n        console.log('## server sent: over_size event.')\n        this.emit('over_size', 'over_size')\n        break;\n      case IOMsg.PING:\n        this.pong();\n        break;\n\n      case IOMsg.PONG:\n        break;\n\n      case IOMsg.IAM_RES:\n        try {\n          let str = decoder.decode(buffer.subarray(1))\n          let jsonInfo = JSON.parse(str)\n          if (jsonInfo.ip) {\n            this.ip = jsonInfo.ip;\n          }\n          console.log('<IAM_RES>', JSON.stringify(jsonInfo))\n          // console.log('<IAM_RES>', JSON.stringify(jsonInfo,null,2))\n        } catch (error) {\n          // console.log('<IAM_RES> data error')\n        }\n        break;\n\n      case IOMsg.CID_RES:\n        let cidStr = decoder.decode(buffer.subarray(1))\n        this.cid = cidStr;\n\n        // **IMPORTANT** change state before subscribe.\n        this.stateChange('ready', 'cid_ready')\n        this.subscribe_memory_channels()\n        break;\n\n      case IOMsg.QUOTA_LEVEL:\n        let quotaLevel = buffer[1]\n        this.level = quotaLevel;\n        this.quota = quotaTable[quotaLevel];\n        console.log('## QUOTA:', quotaLevel, JSON.stringify(this.quota))\n        break;\n\n      case IOMsg.SERVER_CLEAR_AUTH:\n        this.useAuth = false;\n        this.boho.clearAuth();\n        this.stop();\n        break;\n\n      case IOMsg.SERVER_REDIRECT:\n        let host_port;\n        let url;\n        let protocol;\n        let addressType;\n        if (buffer.byteLength == 7) { // ipv4 ,port\n          addressType = 'IPV4:PORT'\n          host_port = byteToUrl(buffer.subarray(1))\n          protocol = 'cong://'\n        } else { // domain url\n          addressType = 'URL'\n          host_port = decoder.decode(buffer.subarray(1))\n          protocol = ''\n        }\n\n        url = protocol + host_port\n        this.redirect(url)\n        break;\n\n      case IOMsg.SERVER_READY:\n        this.stateChange('server_ready', 'server_ready')\n        if (this.useAuth) {\n          this.send(this.boho.auth_req())\n          // CID_REQ will be called, after auth_ack.\n        } else {\n          // CID_REQ here, if not using auth.\n          this.send(Buffer.from([IOMsg.CID_REQ]))\n        }\n        break;\n\n      case IOMsg.SERVER_SIGNAL:\n        try {\n          let str = decoder.decode(buffer.subarray(1))\n          let ss = JSON.parse(str)\n\n          if (ss.event && ss.data) {\n            this.serverSet = ss.data;\n            this.emit(ss.event, ss.data)\n          }\n\n        } catch (error) {\n          // console.log('<SERVER_SIGNAL> parsing error')\n        }\n        break;\n\n      case IOMsg.SET:\n        try {\n          let setPack = MBP.unpack(buffer)\n          if (setPack) {\n            this.emit(setPack.topic, ...setPack.args)\n          }\n        } catch (error) {\n          // console.log('<SET> parsing error')\n        }\n        break;\n\n      case IOMsg.SIGNAL_E2E:\n      case IOMsg.SIGNAL:\n        try {\n          let tagLen = buffer.readUint8(1)\n          let tagBuf = buffer.subarray(2, 2 + tagLen)\n          let tag = decoder.decode(tagBuf)\n\n          let payloadType = buffer.readUint8(2 + tagLen)\n          let payloadBuffer = buffer.subarray(3 + tagLen)\n\n          /* three types of signal message.\n            > unicast message to me:  tag includes @, no cid: '@*'\n            > cid_sub message:  tag includes cid and @ both : 'cid@*'\n            > ch_sub message:  else.\n          */\n          switch (payloadType) {\n\n            case PAYLOAD_TYPE.EMPTY:\n              if (tag.indexOf('@') === 0) this.emit('@', null, tag)\n              else this.emit(tag, null, tag)\n              break;\n\n            case PAYLOAD_TYPE.TEXT:\n              // !! Must remove null char before decode in JS.\n              // string payload contains null char for the c/cpp devices.\n              let payloadStringWithoutNull = payloadBuffer.subarray(0, payloadBuffer.byteLength - 1)\n              let oneString = decoder.decode(payloadStringWithoutNull)\n              if (tag.indexOf('@') === 0) this.emit('@', oneString, tag)\n              if (tag !== '@') this.emit(tag, oneString, tag)\n              break;\n\n            case PAYLOAD_TYPE.BINARY:\n              if (tag.indexOf('@') === 0) this.emit('@', payloadBuffer, tag)\n              if (tag !== '@') this.emit(tag, payloadBuffer, tag)\n              break;\n\n            case PAYLOAD_TYPE.OBJECT:\n              let oneObjectBuffer = decoder.decode(payloadBuffer)\n              let oneJSONObject = JSON.parse(oneObjectBuffer)\n              if (tag.indexOf('@') === 0) this.emit('@', oneJSONObject, tag)\n              if (tag !== '@') this.emit(tag, oneJSONObject, tag)\n              break;\n\n            case PAYLOAD_TYPE.MJSON:\n              let mjsonBuffer = decoder.decode(payloadBuffer)\n              let mjson = JSON.parse(mjsonBuffer)\n              if (tag.indexOf('@') === 0) this.emit('@', ...mjson, tag)\n              if (tag !== '@') this.emit(tag, ...mjson, tag)\n              break;\n\n            case PAYLOAD_TYPE.MBA:\n              let mbaObject = MBP.unpack(payloadBuffer)\n              if (tag.indexOf('@') === 0) this.emit('@', ...mbaObject.args, tag)\n              if (tag !== '@') this.emit(tag, ...mbaObject.args, tag)\n              break;\n\n            default:\n            // console.log('## Unkown payloadtype', payloadType)\n          }\n\n        } catch (err) {\n          // console.log('## signal parse err', err)\n        }\n        break;\n\n      case IOMsg.RESPONSE_MBP:\n        this.testPromise(buffer)\n        break;\n\n      case BohoMsg.AUTH_NONCE:\n        let auth_hmac = this.boho.auth_hmac(buffer)\n        if (auth_hmac) {\n          this.send(auth_hmac)\n        } else {\n          this.stateChange('auth_fail', 'Invalid local auth_hmac.')\n        }\n        break;\n\n      case BohoMsg.AUTH_FAIL:\n        this.stateChange('auth_fail', 'server reject auth.')\n        break;\n\n      case BohoMsg.AUTH_ACK:\n        if (this.boho.check_auth_ack_hmac(buffer)) {\n          this.stateChange('auth_ready', 'server sent auth_ack')\n          this.send(Buffer.from([IOMsg.CID_REQ]))\n        } else {\n          this.stateChange('auth_fail', 'invalid server_hmac')\n        }\n        break;\n\n      default:\n        try {\n          decoded = decoder.decode(buffer)\n          // console.log('text message:', decoded)\n          this.emit('text_message', decoded)\n        } catch (error) {\n\n        }\n\n        break;\n\n    }\n  }\n\n  iam(title) {\n    // console.log('iam', title)\n    if (title) {\n      this.send_enc_mode(MBP.pack(\n        MBP.MB('#MsgType', '8', IOMsg.IAM),\n        MBP.MB('#', title)\n      ))\n    } else {\n      this.send_enc_mode(MBP.pack(\n        MBP.MB('#MsgType', '8', IOMsg.IAM)\n      ))\n    }\n  }\n\n\n  ping() {\n    this.send(Buffer.from([IOMsg.PING]))\n  }\n\n  pong() {\n    this.send(Buffer.from([IOMsg.PONG]))\n  }\n\n\n  // application level ping tool.  \n  // simple message sending and reply.\n  echo(args) {\n    if (args) {\n      console.log('echo args:', args)\n      this.send_enc_mode(MBP.pack(\n        MBP.MB('#MsgType', '8', IOMsg.ECHO),\n        MBP.MB('#msg', args)\n      ))\n    } else {\n      // # do not encrypt blank echo #\n      this.send(Buffer.from([IOMsg.ECHO]))\n    }\n  }\n\n\n  bin(...data) {\n    this.send(MBP.U8pack(...data))\n  }\n\n  send(data) {\n    if (data.byteLength > this.quota.signalSize) {\n      this.emit('over_size')\n      console.log('## QUOTA LIMIT OVER!! \\nsignal message.byteLength: ', data.byteLength)\n      console.log('## your maximum signalSize(bytes) is:', this.quota.signalSize)\n      return\n    }\n    this.socket_send(data);\n  }\n\n  /*\n   Policy. Should message do encrypt?\n\n   if encMode == auto\n     NO. if connection using TLS line.\n        // ex. wss://url connection.\n     YES. if no TLS line.\n        // ex. ws://url connection.\n\n   if encMode == YES\n     YES. encrypt the message.\n\n   if encMode == NO\n     NO. do not ecnrypt message.\n\n  */\n  getEncryptionMode() {\n    if (this.encMode === ENC_MODE.YES ||\n      this.encMode === ENC_MODE.AUTO &&\n      !this.TLS && this.boho.isAuthorized\n    ) {\n      return true;\n    } else {\n      return false\n    }\n  }\n\n  send_enc_mode(data, useEncryption) {\n\n    // use default policy.\n    if (useEncryption === undefined) {\n      useEncryption = this.getEncryptionMode()\n    }\n\n    if (data[0] == IOMsg.SIGNAL_E2E && useEncryption) {\n      // input data:  signal_header + e2ePayload\n      // encrypt signal_header area only. payload is encrypted with e2e key already.\n      let tagLen = data[1]\n      let encHeader = this.boho.encrypt_488(data.subarray(0, 3 + tagLen))\n      encHeader[0] = BohoMsg.ENC_E2E\n      this.send(Buffer.concat([encHeader, data.subarray(3 + tagLen)]))\n      // console.log('<< send_enc_mode [ ENC_E2E ]')\n\n    } else if (useEncryption) {\n      // console.log('<< send_enc_mode [ ENC_488 ]')\n      let encPack = this.boho.encrypt_488(data)\n      this.send(encPack)\n    } else {\n      // console.log('<< send_enc_mode  [ PLAIN ]' )\n      this.send(data)\n    }\n\n  }\n\n\n  setMsgPromise(mid) {\n    return new Promise((resolve, reject) => {\n      this.promiseMap.set(mid, [resolve, reject])\n      setTimeout(e => {\n        if (this.promiseMap.has(mid)) {\n          reject('timeout');\n          this.promiseMap.delete(mid)\n        }\n      }, this.promiseTimeOut);\n    })\n  }\n\n  testPromise(buffer) {\n\n    let res = MBP.unpack(buffer)\n    if (!res) return\n\n    if (this.promiseMap.has(res.mid)) {\n      let [resolve, reject] = this.promiseMap.get(res.mid)\n      this.promiseMap.delete(res.mid)\n\n      if (res.status < 128) {\n        res.ok = true;\n        resolve(res)\n      } else {\n        res.ok = false;\n        reject(res)\n      }\n\n\n    } else {\n      console.log('no promise id')\n    }\n  }\n\n\n  publish(...args) {\n    this.signal(...args)\n  }\n\n\n  signal(tag, ...args) {\n    if (typeof tag !== 'string') throw TypeError('tag should be string.')\n\n    let signalPack = getSignalPack(tag, ...args)\n    this.send_enc_mode(signalPack)\n  }\n\n  decrypt_e2e(data, key) {\n    return this.boho.decrypt_e2e(data, key)\n  }\n\n  signal_e2e(tag, data, key) {\n\n    if (typeof tag !== 'string') throw TypeError('tag should be string.')\n    let tagEncoded = encoder.encode(tag)\n    let dataPack = MBP.B8(data)\n\n    //encrypt payload area with key\n    let sercretPack = this.boho.encrypt_e2e(dataPack, key)\n\n    //change signal MsgType header into SIGNAL_E2E\n    let signalPack = MBP.pack(\n      MBP.MB('#MsgType', '8', IOMsg.SIGNAL_E2E),\n      MBP.MB('#tagLen', '8', tagEncoded.byteLength),\n      MBP.MB('#tag', tagEncoded),\n      MBP.MB('#payloadType', '8', PAYLOAD_TYPE.BINARY),\n      MBP.MB('#payload', sercretPack)\n    )\n\n    this.send_enc_mode(signalPack)\n  }\n\n\n\n  set(storeName, ...args) {\n    if (!storeName || args.length == 0) {\n      return Promise.reject(new Error('set need storeName and value)'))\n    }\n    return this.req('store', 'set', storeName, ...args)\n  }\n\n  async get(storeName) {\n    if (!storeName) {\n      return Promise.reject(new Error('store get need storeName)'))\n    }\n    let pack = await this.req('store', 'get', storeName)\n    let { $ } = MBP.unpack(pack.body)\n    return $\n  }\n\n\n  req(target, topic, ...args) {\n    if (!target || !topic)\n      return Promise.reject(new Error('request need target and topic)'))\n    let sigPack;\n    if (args.length > 0) {\n      sigPack = MBP.pack(\n        MBP.MB('#MsgType', '8', IOMsg.REQUEST),\n        MBP.MB('mid', '16', ++this.mid),\n        MBP.MB('target', target),\n        MBP.MB('topic', topic),\n        MBP.MBA(...args)\n      )\n    } else {\n      sigPack = MBP.pack(\n        MBP.MB('#MsgType', '8', IOMsg.REQUEST),\n        MBP.MB('mid', '16', ++this.mid),\n        MBP.MB('target', target),\n        MBP.MB('topic', topic)\n      )\n    }\n    this.send_enc_mode(sigPack)\n    return this.setMsgPromise(this.mid)\n  }\n\n\n  subscribe(tag) {\n    if (typeof tag !== 'string') throw TypeError('tag should be string.')\n    if (this.state !== STATES.READY) return\n\n    let tagList = tag.split(',')\n    tagList.forEach(tag => {\n      this.channels.add(tag)\n    })\n\n    let tagEncoded = encoder.encode(tag)\n    if (tagEncoded.byteLength > SIZE_LIMIT.TAG_LEN1) throw TypeError('please use tag string bytelength below:' + SIZE_LIMIT.TAG_LEN1)\n\n    this.send_enc_mode(\n      Buffer.concat([\n        MBP.NB('8', IOMsg.SUBSCRIBE),\n        MBP.NB('8', tagEncoded.byteLength),\n        tagEncoded]))\n  }\n\n  subscribe_promise(tag) {\n    if (typeof tag !== 'string') throw TypeError('tag should be string.')\n    if (this.state !== STATES.READY) {\n      return Promise.reject('subscribe_promise:: connection is not ready')\n    }\n\n    let tagEncoded = encoder.encode(tag)\n    if (tagEncoded.byteLength > SIZE_LIMIT.TAG_LEN2) throw TypeError('please use tag string bytelength: ' + SIZE_LIMIT.TAG_LEN2)\n\n    this.send_enc_mode(\n      Buffer.concat([\n        MBP.NB('8', IOMsg.SUBSCRIBE_REQ),\n        MBP.NB('16', ++this.mid),\n        MBP.NB('16', tagEncoded.byteLength),\n        tagEncoded]))\n    return this.setMsgPromise(this.mid)\n  }\n\n  subscribe_memory_channels() { //local cache . auto_resubscribe\n    if (this.channels.size == 0) return\n    let chList = Array.from(this.channels).join(',')\n\n    this.subscribe_promise(chList)\n      .then((res) => {\n        // console.log('>> SUBSCRIBE_REQ result', res ) // return code == map.size\n      }).catch((e) => {\n        console.log('>> SUBSCRIBE FAIL:', e)\n      })\n\n  }\n\n  unsubscribe(tag = \"\") {\n    if (typeof tag !== 'string') throw TypeError('tag should be string.')\n\n    if (tag == \"\") { // blank tag means unsubscribe all\n      this.channels.clear();\n    } else {\n      let tagList = tag.split(',')\n      tagList.forEach(tag => {\n        this.channels.delete(tag)\n      })\n    }\n\n    let tagEncoded = encoder.encode(tag)\n    if (tagEncoded.byteLength > SIZE_LIMIT.TAG_LEN1) throw TypeError('please use tag string bytelength below:' + SIZE_LIMIT.TAG_LEN1)\n\n    this.send_enc_mode(Buffer.concat([\n      MBP.NB('8', IOMsg.UNSUBSCRIBE),\n      MBP.NB('8', tagEncoded.byteLength),\n      tagEncoded]))\n  }\n\n\n  listen(tag, handler) {\n    if (typeof tag !== 'string') throw TypeError('tag should be string.')\n    if (tag.length > 255 || tag.length == 0) throw TypeError('tag string length range: 1~255')\n    if (typeof handler !== 'function') throw TypeError('handler is not a function.')\n\n    if (tag.indexOf('@') !== 0) {\n      this.channels.add(tag)\n    }\n    this.on(tag, handler)\n    // do not subscribe now.\n    // will subscribe when receive CID_RES signal from server.\n\n  }\n\n\n\n  link(to, tag, handler) {\n    if (typeof to !== 'string') throw TypeError('to(local link target) is not a string.')\n    if (typeof tag !== 'string') throw TypeError('tag is not a string.')\n    if (tag.length > 255 || tag.length == 0) throw TypeError('tag string length range: 1~255')\n    if (typeof handler !== 'function') throw TypeError('handler is not a function.')\n\n    if (tag.indexOf('@') !== 0) {\n      this.channels.add(tag)\n    }\n\n    let linkSet;\n    if (this.linkMap.has(to)) {\n      linkSet = this.linkMap.get(to)\n    } else {\n      linkSet = new Set()\n    }\n\n    linkSet.add(tag)\n    this.linkMap.set(to, linkSet)\n    this.on(tag, handler)\n    this.subscribe(tag)\n\n  }\n\n\n  unlink(to, tag) {\n    if (typeof to !== 'string') throw TypeError('to(local link target) is not a string.')\n    if (typeof tag !== 'string') throw TypeError('tag is not a string.')\n    if (tag.length > 255 || tag.length == 0) throw TypeError('tag string length range: 1~255')\n\n    if (!this.linkMap.has(to)) return;\n\n    let linkSet = this.linkMap.get(to)\n    let tags = Array.from(linkSet)\n    for (let i = 0; i < tags.length; i++) {\n      if (tags[i] == tag) {\n        this.unsubscribe(tag)\n        this.removeAllListeners(tag)\n        linkSet.delete(tag)\n        this.linkMap.set(to, linkSet)\n        break;\n      }\n    }\n\n  }\n\n  unlinkAll(to) {\n    if (typeof to !== 'string') throw TypeError('to(local link target) is not a string.')\n    if (!this.linkMap.has(to)) return;\n\n    let linkSet = this.linkMap.get(to)\n    let tags = Array.from(linkSet)\n    for (let i = 0; i < tags.length; i++) {\n      this.unsubscribe(tags[i])\n      this.removeAllListeners(tags[i])\n      linkSet.delete(tags[i])\n    }\n    this.linkMap.delete(to)\n\n  }\n\n\n\n  getMetric() {\n    return {\n      tx: this.txCounter,\n      rx: this.rxCounter,\n      txb: this.txBytes,\n      rxb: this.rxBytes,\n      last: (Date.now() - this.lastTxRxTime) / 1000\n    }\n\n  }\n\n  getState() {\n    return this.state\n  }\n\n  getStateName() {\n    //state <number>\n    //value of constant STATES.NAME < number >\n    //type of constant STATES.NAME name < string uppercase >\n    //stateName,eventName <string lowercase>\n    return (STATES[this.state]).toLowerCase()\n  }\n\n  getSecurity() {\n    return {\n      useAuth: this.useAuth,\n      isTLS: this.TLS,\n      isAuthorized: this.boho.isAuthorized,\n      encMode: this.encMode,\n      usingEncryption: this.getEncryptionMode()\n    }\n  }\n\n  stateChange(state, emitEventAndMessage) {\n    // STATES constant name : string upperCase\n    // eventName, .stateName : string lowerCase\n    // .state : number\n    let eventName = state.toLowerCase()\n    this.state = STATES[state.toUpperCase()] // state: number\n    if (emitEventAndMessage) this.emit(eventName, emitEventAndMessage)\n\n    if (this.stateName !== eventName) {\n      this.stateName = eventName\n      this.emit('change', eventName)\n    }\n  }\n\n}\n\n\n\n\n","import { IOCore } from \"./IOCore.js\";\nimport { Buffer } from 'meta-buffer-pack'\nexport { Boho, RAND, BohoMsg, Meta, MetaSize, sha256, MBP, Buffer } from 'boho'\nexport * from '../common/constants.js'\n\n// Browser WebSocket\nexport class IO extends IOCore {\n  static binaryType = \"arraybuffer\"\n\n  constructor(url) {\n    super(url);\n    document.addEventListener('visibilitychange', this.browserVisiblePing.bind(this));\n    if (url) this.open();\n  }\n\n  browserVisiblePing() {\n    if (document.visibilityState === 'visible') {\n      this.ping()\n    }\n  }\n\n\n  close() {\n    if (this.socket) {\n      this.socket.onclose = null\n      this.socket.onmessage = null\n      this.socket.onerror = null\n      this.socket.close();\n      this.socket = null;\n    }\n    this.emit('close')\n  }\n\n\n  stop() {\n    this.close()\n    clearInterval(this.connectionCheckerIntervalID);\n    this.connectionCheckerIntervalID = null\n  }\n\n\n  keepAlive() {\n    if (!this.socket || this.socket?.readyState === 3) {\n      this.open();\n    }\n  }\n\n\n\n  createConnection(url) {\n    // Web Browser WebSocket\n    this.socket = new WebSocket(url);\n    this.socket.binaryType = IO.binaryType\n\n    this.stateChange('opening')\n\n    this.socket.onopen = () => {\n      if (this.socket.binaryType == \"arraybuffer\") {\n        this.socket.onmessage = this.onWebSocketMessage.bind(this);\n      } else {  // blob\n        this.socket.onmessage = this.onWebSocketMessageBlob.bind(this);\n      }\n      this.emit('open');\n    };\n\n    this.socket.onerror = (e) => {\n      this.emit('error', e)\n    }\n\n    this.socket.onclose = () => {\n      this.emit('close');\n    }\n  }\n\n  onWebSocketMessage(event) {\n    // event.data is arrayBuffer  or text_message\n    this.rxCounter++;\n    this.lastTxRxTime = Date.now();\n    let buffer = Buffer.from(event.data)\n    this.rxBytes += buffer.byteLength\n    this.emit('socket_data', buffer);\n  }\n\n  async onWebSocketMessageBlob(event) {\n    // event.data is Blob or text_message\n    this.rxCounter++;\n    this.lastTxRxTime = Date.now();\n    let buffer;\n    if (event.data instanceof Blob) {\n      let ab = await event.data.arrayBuffer()\n      buffer = Buffer.from(ab)\n    } else {\n      buffer = Buffer.from(event.data)\n    }\n    this.rxBytes += buffer.byteLength\n    this.emit('socket_data', buffer);\n  }\n\n  socket_send(data) {\n    if (this.socket?.readyState === 1) {\n      this.socket.send(data)\n      this.txCounter++;\n      this.txBytes += data.byteLength\n      this.lastTxRxTime = Date.now();\n    } else {\n      console.log('.')\n    }\n  }\n\n}\n\n"],"names":["base64Js","b64","lens","getLens","validLen","placeHoldersLen","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","ieee754","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","value","c","rt","abs","isNaN","floor","log","LN2","base64","require$$0","require$$1","customInspectSymbol","Symbol","exports","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","byteLength","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","toByteArray","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","encoder","TextEncoder","decoder","TextDecoder","NB","numberBuffer","initValue","toUpperCase","MB","metaBuffer","typeOrData","bufferType","JSON","stringify","v","MBA","metaBufferArguments","args","map","argsIndex","parseTypeName","readTypedBuffer","simpleType","strBuffer","decode","strNumber","objEncoded","parse","pack","bufArr","subArr","filter","item","flatArray","info","infoEncoded","infoSize","forEach","bufPack","infoStr","encode","infoSizeBuff","unpack","binPack","meta","infoArr","getMeta","binObj","readCounter","result","leftSize","mbaIndex","$","U8","parseUint8Array","shareArrayBuffer","originData","dataCopy","B8","parseBuffer","u8","B8pack","parseBufferThenConcat","dataArray","buffers","U8pack","parseUint8ThenConcat","bufferSize","equal","buf1","buf2","getBufferSize","getMetaSize","TAIL_LEN","parseMetaInfo","infoFrom","decoded","firstItem","readTail","DataView","getUint16","getBuffer","rawBufferSize","showDetail","metaInfo","rawPack","has","hasOwnProperty","prefix","Events","EE","context","once","addListener","emitter","event","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","names","getOwnPropertySymbols","listeners","handlers","l","ee","listenerCount","emit","a1","a2","a3","a4","a5","removeListener","on","removeAllListeners","off","prefixed","module","K","Uint32Array","hashBlocks","w","p","f","g","h","u","t1","t2","Hash","digestLength","blockSize","state","Int32Array","temp","bufferLength","bytesHashed","finished","reset","clean","update","dataLength","dataPos","finish","left","bitLenHi","bitLenLo","padLength","digest","_saveState","_restoreState","HMAC","key","inner","outer","pad","istate","ostate","hash","sha256","MBP.U8","MBP.B8","hmac","MBP.MB","BohoMsg","AUTH_REQ","AUTH_NONCE","AUTH_HMAC","AUTH_ACK","AUTH_FAIL","AUTH_EXT","ENC_PACK","ENC_E2E","ENC_488","Meta","MBP.meta","lastItem","MetaSize","isNode","global","process","RAND","webcrypto","getRandomValues","self","crypto","Boho","_id8","_otpSrc44","_otp36","_hmac","auth_salt12","localNonce","remoteNonce","isAuthorized","clearAuth","set_hash_id8","set_id8","encStr","set_key","set_id_key","id_key","delimiterPosition","id","substring","copy_id8","copy_key","sha256_n","srcData","hashSum","set_clock_rand","milTime","Date","now","secTime","MBP.NB","set_clock_nonce","nonce","set_salt12","salt12","resetOTP","getIndexOTP","otpIndex","generateHMAC","hmacSrc","getHMAC8","xotp","otpStartIndex","shareDataBuffer","dataOffset","xorCalcLen","iotp","auth_req","MBP.pack","auth_nonce","unixTime","auth_hmac","MBP.unpack","check_auth_hmac","infoPack","hmac32","MBP.equal","replyHMAC","auth_ack","MBP.rawPack","check_auth_ack_hmac","encrypt_488","hmac8","encData","decrypt_488","otpSrc8","xdata","$OTHERS","decData","encryptPack","decryptPack","encrypt_e2e","baseKey","decrypt_e2e","decPack","STATES","OPENING","OPEN","CLOSING","CLOSED","SERVER_READY","AUTH_READY","READY","REDIRECTING","CLIENT_STATE","INIT","SENT_SERVER_READY","RECV_AUTH_REQ","SENT_SERVER_NONCE","RECV_AUTH_HMAC","CID_READY","ENC_MODE","NO","YES","AUTO","SIZE_LIMIT","TAG_LEN1","TAG_LEN2","CONNECTION_CHECKER_PERIOD","PROMISE_TIMEOUT","DID","CID","PAYLOAD_TYPE","EMPTY","TEXT","BINARY","OBJECT","MJSON","IOMsg","CID_REQ","CID_RES","QUOTA_LEVEL","SERVER_CLEAR_AUTH","SERVER_REDIRECT","LOOP","ECHO","PING","PONG","CLOSE","SIGNAL","SIGNAL_REQ","SIGNAL_E2E","SUBSCRIBE","SUBSCRIBE_REQ","UNSUBSCRIBE","SERVER_SIGNAL","IAM","IAM_RES","SET","RESPONSE_CODE","RESPONSE_MBP","REQUEST","RESPONSE","FLOW_MODE","WAIT","RESUME","TIME_OUT","OVER_SIZE","OVER_FLOW","API_TYPE","REQUEST_RESPONSE","ONE_WAY","STATUS","OK","ERROR","quotaTable","signalSize","publishCounter","trafficRate","getSignalPack","tag","sigPack","tagEncoded","payload","containsBuffer","parsePayload","mbaBuffer","MBP.MBA","IOCore","url","cid","ip","socket","stateName","getStateName","txCounter","rxCounter","txBytes","rxBytes","lastTxRxTime","connectionCheckerPeriod","connectionCheckerIntervalID","boho","TLS","encMode","useAuth","nick","channels","Set","promiseMap","Map","promiseTimeOut","mid","level","quota","serverSet","linkMap","onOpen","bind","onClose","onData","redirect","url2","close","stateChange","createConnection","open","setInterval","keepAlive","login","auth_pack","send","auth","msgType","err","pong","jsonInfo","cidStr","subscribe_memory_channels","quotaLevel","stop","host_port","protocol","byteToUrl","ss","setPack","topic","tagLen","tagBuf","payloadType","payloadBuffer","payloadStringWithoutNull","oneString","oneObjectBuffer","oneJSONObject","mjsonBuffer","mjson","mbaObject","testPromise","iam","title","send_enc_mode","ping","echo","bin","MBP.U8pack","socket_send","getEncryptionMode","useEncryption","encHeader","encPack","setMsgPromise","Promise","resolve","reject","setTimeout","delete","status","ok","publish","signal","signalPack","signal_e2e","dataPack","sercretPack","storeName","req","body","subscribe","add","subscribe_promise","chList","then","catch","unsubscribe","clear","listen","handler","link","to","linkSet","unlink","tags","unlinkAll","getMetric","tx","rx","txb","rxb","getState","getSecurity","isTLS","usingEncryption","emitEventAndMessage","eventName","IO","static","document","addEventListener","browserVisiblePing","visibilityState","onclose","onmessage","onerror","clearInterval","readyState","WebSocket","binaryType","onopen","onWebSocketMessage","onWebSocketMessageBlob","Blob","ab","arrayBuffer"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}